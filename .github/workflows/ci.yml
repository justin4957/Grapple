name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  MIX_ENV: test
  ELIXIR_ASSERT_TIMEOUT: 2000

jobs:
  test:
    name: Test (Elixir ${{matrix.elixir}} OTP ${{matrix.otp}})
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        include:
          # Latest stable versions
          - elixir: '1.18.1'
            otp: '27.2'
            coverage: true
          # Test with OTP 27 (Elixir 1.18 required for OTP 27)
          - elixir: '1.18.0'
            otp: '27.1'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Elixir
        uses: erlef/setup-beam@v1
        with:
          elixir-version: ${{ matrix.elixir }}
          otp-version: ${{ matrix.otp }}

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: |
            deps
            _build
          key: ${{ runner.os }}-mix-${{ matrix.elixir }}-${{ matrix.otp }}-${{ hashFiles('**/mix.lock') }}
          restore-keys: |
            ${{ runner.os }}-mix-${{ matrix.elixir }}-${{ matrix.otp }}-

      - name: Install dependencies
        run: mix deps.get

      - name: Compile code (warnings as errors)
        run: mix compile --warnings-as-errors

      - name: Check formatting
        run: mix format --check-formatted
        if: ${{ matrix.coverage }}

      - name: Run tests
        run: mix test --trace

      - name: Run integration tests
        run: mix test --only integration --trace

      - name: Run property-based tests
        run: mix test test/grapple/property_test.exs --trace

      - name: Generate coverage report
        run: mix coveralls.html
        if: ${{ matrix.coverage }}

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        if: ${{ matrix.coverage }}
        with:
          files: ./cover/excoveralls.html
          fail_ci_if_error: false

      - name: Archive coverage results
        uses: actions/upload-artifact@v4
        if: ${{ matrix.coverage }}
        with:
          name: coverage-report
          path: cover/

  quality:
    name: Code Quality
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Elixir
        uses: erlef/setup-beam@v1
        with:
          elixir-version: '1.18.1'
          otp-version: '27.2'

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: |
            deps
            _build
          key: ${{ runner.os }}-mix-quality-${{ hashFiles('**/mix.lock') }}
          restore-keys: |
            ${{ runner.os }}-mix-quality-

      - name: Install dependencies
        run: mix deps.get

      - name: Compile for quality checks
        run: MIX_ENV=dev mix compile

      - name: Check for unused dependencies
        run: mix deps.unlock --check-unused

      - name: Check for security vulnerabilities
        run: mix deps.audit

      - name: Run Credo (static code analysis)
        run: mix credo --strict

  docs:
    name: Documentation
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Elixir
        uses: erlef/setup-beam@v1
        with:
          elixir-version: '1.18.1'
          otp-version: '27.2'

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: |
            deps
            _build
          key: ${{ runner.os }}-mix-docs-${{ hashFiles('**/mix.lock') }}
          restore-keys: |
            ${{ runner.os }}-mix-docs-

      - name: Install dependencies
        run: mix deps.get

      - name: Generate documentation
        run: MIX_ENV=dev mix docs

      - name: Archive documentation
        uses: actions/upload-artifact@v4
        with:
          name: documentation
          path: doc/

  dialyzer:
    name: Static Analysis (Dialyzer)
    runs-on: ubuntu-latest
    continue-on-error: true

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Elixir
        uses: erlef/setup-beam@v1
        with:
          elixir-version: '1.18.1'
          otp-version: '27.2'

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: |
            deps
            _build
          key: ${{ runner.os }}-mix-dialyzer-${{ hashFiles('**/mix.lock') }}
          restore-keys: |
            ${{ runner.os }}-mix-dialyzer-

      - name: Cache PLT files
        uses: actions/cache@v4
        with:
          path: priv/plts
          key: ${{ runner.os }}-plt-${{ hashFiles('**/mix.lock') }}
          restore-keys: |
            ${{ runner.os }}-plt-

      - name: Install dependencies
        run: mix deps.get

      - name: Compile for Dialyzer
        run: MIX_ENV=dev mix compile

      - name: Run Dialyzer
        run: mix dialyzer
